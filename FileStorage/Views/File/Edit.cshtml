@model BLL.Models.FileModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit file</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Size)
    @Html.HiddenFor(model => model.IsFile)
    @Html.HiddenFor(model => model.Location)
    @Html.HiddenFor(model => model.Type)
    @Html.HiddenFor(model => model.UploadDate)
    @Html.HiddenFor(model => model.DirectoryId)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.TextAreaFor(model => model.Description, 5, 20, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsImportant, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsImportant)
                @Html.ValidationMessageFor(model => model.IsImportant, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            <span class="text-success">@ViewBag.Message</span>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" }, "Error")
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
